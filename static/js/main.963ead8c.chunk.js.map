{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/Card.js","components/CardList.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Card","alt","src","id","name","email","CardList","robots","map","user","i","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAUeA,EARG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKC,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCC,KAAK,SAASC,YAAY,gBAAgBC,SAAUJ,OCKrGK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCSJC,EAZF,SAACN,GACV,OACI,sBAAKL,UAAU,sDAAf,UACI,qBAAKY,IAAI,SAASC,IAAG,+BAA0BR,EAAMS,GAAhC,cACrB,gCACI,6BAAKT,EAAMU,OACX,4BAAIV,EAAMW,eCOXC,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OAAQ,cAAC,EAAD,CAAcP,GAAII,EAAOG,GAAGP,GAAIC,KAAMG,EAAOG,GAAGN,KAAMC,MAAOE,EAAOG,GAAGL,OAA5DK,SCcxBC,E,kDAnBX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,iDAEJG,KAAKtB,MAAMK,a,GAhBCmB,aC8CZC,G,wDAxCX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKJ,SAAU,CAACK,YAAaD,EAAME,OAAOC,SAP1C,EAAKZ,MAAQ,CACTL,OAAQ,GACRe,YAAa,IAJP,E,qDAYd,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACV,OAAQsB,S,oBAG1C,WAAU,IAAD,OACCC,EAAiBd,KAAKJ,MAAML,OAAOwB,QAAO,SAAAC,GAC5C,OAAOA,EAAM5B,KAAK6B,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAEpE,OAAgC,IAA7BjB,KAAKJ,MAAML,OAAO4B,OACT,yCAGJ,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc4B,KAAKI,iBAFlC,IAGI,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUb,OAAQuB,e,GAhC5BM,IAAMlB,YCKTmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.963ead8c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ( {searchChange} ) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={ {overflowY: 'scroll', border: '5px solid black', height: '800px'} }>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (<Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError)\r\n            return <h1>There is error!</h1>\r\n        \r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from '../components/CardList';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    OnSearchChange = (event) => {\r\n        this.setState( {searchfield: event.target.value} );\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(this.state.robots.length === 0) {\r\n            return (<h1>Loading</h1>)\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.OnSearchChange}/>,\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}